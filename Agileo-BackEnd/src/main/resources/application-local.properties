# ============ APPLICATION CONFIGURATION ============
spring.application.name=AGILEO
server.port=8081

keycloak.admin.server-url=http://localhost:8080
keycloak.admin.realm=RB-realm
keycloak.admin.client-id=admin-cli
keycloak.admin.username=admin
keycloak.admin.password=admin

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/RB-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/RB-realm/protocol/openid-connect/certs
keycloak.auth-server-url=http://localhost:8080

cors.allowed-origins=http://localhost:4200
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
cors.allowed-headers=*
cors.allow-credentials=true

keycloak.sync.enabled=true
keycloak.admin.timeout=5000
keycloak.admin.retry.max-attempts=3
keycloak.admin.retry.delay=1000

# ============ MULTI-DATABASE CONFIGURATION ============
# PRIMARY DataSource - Affaires, M6003, etc.
spring.datasource.primary.jdbc-url=jdbc:sqlserver://localhost:1433;databaseName=AGILEO;encrypt=true;trustServerCertificate=true;
spring.datasource.primary.username=UserAppRB
spring.datasource.primary.password=Richebois@1977
spring.datasource.primary.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# PRIMARY Hikari Configuration
spring.datasource.primary.hikari.maximum-pool-size=20
spring.datasource.primary.hikari.minimum-idle=5
spring.datasource.primary.hikari.idle-timeout=300000
spring.datasource.primary.hikari.pool-name=PrimaryHikariCP
spring.datasource.primary.hikari.max-lifetime=1200000
spring.datasource.primary.hikari.connection-timeout=30000
spring.datasource.primary.hikari.auto-commit=false

# SECONDARY DataSource - Users, Roles, etc.
spring.datasource.secondary.jdbc-url=jdbc:sqlserver://localhost:1433;databaseName=AgileoRB;encrypt=true;trustServerCertificate=true
spring.datasource.secondary.username=UserAppRB
spring.datasource.secondary.password=Richebois@1977
spring.datasource.secondary.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# SECONDARY Hikari Configuration
spring.datasource.secondary.hikari.maximum-pool-size=10
spring.datasource.secondary.hikari.minimum-idle=2
spring.datasource.secondary.hikari.idle-timeout=300000
spring.datasource.secondary.hikari.pool-name=SecondaryHikariCP
spring.datasource.secondary.hikari.max-lifetime=1200000
spring.datasource.secondary.hikari.connection-timeout=30000
spring.datasource.secondary.hikari.auto-commit=false

spring.sql.init.mode=always

# ============ JPA/HIBERNATE CONFIGURATION ============
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
# Configuration pour resoudre le probleme d'OFFSET
spring.jpa.properties.hibernate.legacy_limit_handler=true
spring.jpa.properties.hibernate.dialect.pagination.offset_fetch_supported=false
spring.jpa.properties.hibernate.dialect.pagination.limit_handler=org.hibernate.dialect.pagination.TopLimitHandler
spring.jpa.properties.hibernate.use_sql_comments=false

# ============ JPA TRANSACTION CONFIGURATION ============
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# ============ JPA AUDITING CONFIGURATION ============
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# ============ TRANSACTION MANAGEMENT ============
spring.transaction.default-timeout=60
spring.transaction.rollback-on-commit-failure=true
spring.jpa.open-in-view=false

# ============ AGILEO KEYCLOAK CONFIGURATION ============
agileo.keycloak.realm=RB-realm
agileo.keycloak.auth-server-url=http://localhost:8081
agileo.keycloak.client-id=agileo-backend
agileo.keycloak.client-secret=JnibEKK4V4swqudffcKQkG3ix9ORw4EK

# ============ LOGGING CONFIGURATION ============
# Desactiver completement les logs SQL Hibernate



# ============ SECURITY CONFIGURATION ============
spring.main.allow-bean-definition-overriding=true
lombok.equalsAndHashCode.doNotUseGetters=true

# ============ FILE UPLOAD CONFIGURATION ============
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
spring.web.resources.static-locations=file:uploads/
spring.mvc.static-path-pattern=/uploads/**
spring.servlet.multipart.resolve-lazily=false
spring.servlet.multipart.location=C:/Users/a.yahya/Documents/uploads-temp
# Masquer les erreurs de nettoyage multipart (Windows + Tomcat)
logging.level.org.springframework.web.multipart.support.StandardServletMultipartResolver=ERROR
logging.level.org.apache.catalina.connector.Request=ERROR
# ============ ACTUATOR CONFIGURATION ============
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized
management.info.env.enabled=true

# ============ ERROR HANDLING ============
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=false

# ============ PERFORMANCE OPTIMIZATION ============
spring.jpa.defer-datasource-initialization=false

# ============ JSON CONFIGURATION ============
spring.mvc.contentnegotiation.favor-parameter=false
spring.mvc.contentnegotiation.favor-path-extension=false
spring.mvc.contentnegotiation.media-types.json=application/json

spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false

app.upload.directory=uploads/
app.temp.directory=temp/
app.upload.max-file-size=52428800
app.upload.max-request-size=524288000

# Assurer que les repertoires existent au demarrage




app.path.globalVariable=C:\\Users\\a.yahya\\Documents